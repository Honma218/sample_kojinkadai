<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.infrastructure.datasource.PostMapper">

    <resultMap id="postResultMap" type="com.example.demo.domain.model.Post">
        <id property="id" column="id"/>
        <result property="userId" column="user_id" javaType="String"/>
        <result property="content" column="content" javaType="String"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="findById" resultMap="postResultMap">
        SELECT id, user_id, content, created_at, updated_at 
        FROM POSTS 
        WHERE id = #{id}
    </select>

    <select id="findByUserId" resultMap="postResultMap">
        SELECT id, user_id, content, created_at, updated_at 
        FROM POSTS 
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>

    <select id="findAll" resultMap="postResultMap">
        SELECT id, user_id, content, created_at, updated_at 
        FROM POSTS 
        ORDER BY created_at DESC
    </select>

    <select id="findTimelineByUserIds" resultMap="postResultMap">
        SELECT id, user_id, content, created_at, updated_at 
        FROM POSTS 
        <where>
            <if test="userIds != null and !userIds.isEmpty()">
                user_id IN
                <foreach item="item" collection="userIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY created_at DESC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO POSTS (user_id, content, created_at, updated_at)
        VALUES (#{userId.value}, #{content.value}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="update">
        UPDATE POSTS 
        SET content = #{content.value}, updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM POSTS WHERE id = #{id}
    </delete>

</mapper>
